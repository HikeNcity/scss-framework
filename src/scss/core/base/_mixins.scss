/**
	A color palette having code values assigned to each color.

	@param $palette:	color | background | border | shadow
	@param $hex-code:	hexadecimal color code
	@param $opacity:	0-1
*/
@function cd-palette($palette, $hex-code, $opacity: null) {
	// If hex-code is a number within 0-1, then it actually contains an opacity value.
	@if type-of($hex-code) == number and $hex-code >= 0 and $hex-code <= 1 {
		@return cd-palette($palette, default, $hex-code);
	}

	$color: map-get($palette, $hex-code);
	$opacity: if($opacity == null, opacity($color), $opacity);

	@return rgba($color, $opacity);
}

/**
	Media queries are used to target designs for many standard and popular devices.

	@param $media:	smartphone | tablet | desktop | widescreen
*/
@mixin cd-media($cd-breakpoint) {
	@if map-has-key($cd-breakpoints, $cd-breakpoint) {
		@media #{inspect(map-get($cd-breakpoints, $cd-breakpoint))} {
			@content;
		}
	} @else {
		@warn 'Couldn\'t find a breakpoint named \`#{$cd-breakpoint}`.\'';
	}
}


/**
	Mixin for the property z-index.

	@param $key:	normal | float | modal
*/
@function cd-zindex($key) {
	@return map-get($cd-zindex, $key);
}
